/*
* generated by Xtext
*/
grammar InternalStatemachine;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.statemachine.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.statemachine.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.statemachine.services.StatemachineGrammarAccess;

}

@parser::members {
 
 	private StatemachineGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StatemachineGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStatemachine
entryRuleStatemachine 
:
{ before(grammarAccess.getStatemachineRule()); }
	 ruleStatemachine
{ after(grammarAccess.getStatemachineRule()); } 
	 EOF 
;

// Rule Statemachine
ruleStatemachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatemachineAccess().getGroup()); }
(rule__Statemachine__Group__0)
{ after(grammarAccess.getStatemachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getNameAssignment()); }
(rule__State__NameAssignment)
{ after(grammarAccess.getStateAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getNameAssignment()); }
(rule__Event__NameAssignment)
{ after(grammarAccess.getEventAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statemachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__0__Impl
	rule__Statemachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatemachineKeyword_0()); }

	'statemachine' 

{ after(grammarAccess.getStatemachineAccess().getStatemachineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__1__Impl
	rule__Statemachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getNameAssignment_1()); }
(rule__Statemachine__NameAssignment_1)
{ after(grammarAccess.getStatemachineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__2__Impl
	rule__Statemachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__3__Impl
	rule__Statemachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesKeyword_3()); }

	'states' 

{ after(grammarAccess.getStatemachineAccess().getStatesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__4__Impl
	rule__Statemachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__5__Impl
	rule__Statemachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesAssignment_5()); }
(rule__Statemachine__StatesAssignment_5)*
{ after(grammarAccess.getStatemachineAccess().getStatesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__6__Impl
	rule__Statemachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__7__Impl
	rule__Statemachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsKeyword_7()); }

	'events' 

{ after(grammarAccess.getStatemachineAccess().getEventsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__8__Impl
	rule__Statemachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__9__Impl
	rule__Statemachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsAssignment_9()); }
(rule__Statemachine__EventsAssignment_9)*
{ after(grammarAccess.getStatemachineAccess().getEventsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__10__Impl
	rule__Statemachine__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__11__Impl
	rule__Statemachine__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getTransitionsKeyword_11()); }

	'transitions' 

{ after(grammarAccess.getStatemachineAccess().getTransitionsKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__12__Impl
	rule__Statemachine__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_12()); }

	'{' 

{ after(grammarAccess.getStatemachineAccess().getLeftCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__13__Impl
	rule__Statemachine__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getTransitionsAssignment_13()); }
(rule__Statemachine__TransitionsAssignment_13)*
{ after(grammarAccess.getStatemachineAccess().getTransitionsAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__14__Impl
	rule__Statemachine__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_14()); }

	'}' 

{ after(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__15__Impl
	rule__Statemachine__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getInitialStateKeyword_15()); }

	'initialState' 

{ after(grammarAccess.getStatemachineAccess().getInitialStateKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__16__Impl
	rule__Statemachine__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getInitialiStateAssignment_16()); }
(rule__Statemachine__InitialiStateAssignment_16)
{ after(grammarAccess.getStatemachineAccess().getInitialiStateAssignment_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statemachine__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statemachine__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_17()); }

	'}' 

{ after(grammarAccess.getStatemachineAccess().getRightCurlyBracketKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}






































rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromAssignment_0()); }
(rule__Transition__FromAssignment_0)
{ after(grammarAccess.getTransitionAccess().getFromAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getTransitionAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_2()); }
(rule__Transition__EventAssignment_2)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToAssignment_4()); }
(rule__Transition__ToAssignment_4)
{ after(grammarAccess.getTransitionAccess().getToAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Statemachine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStatemachineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__StatesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_5_0()); }
	ruleState{ after(grammarAccess.getStatemachineAccess().getStatesStateParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__EventsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_9_0()); }
	ruleEvent{ after(grammarAccess.getStatemachineAccess().getEventsEventParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__TransitionsAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getTransitionsTransitionParserRuleCall_13_0()); }
	ruleTransition{ after(grammarAccess.getStatemachineAccess().getTransitionsTransitionParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statemachine__InitialiStateAssignment_16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatemachineAccess().getInitialiStateStateCrossReference_16_0()); }
(
{ before(grammarAccess.getStatemachineAccess().getInitialiStateStateIDTerminalRuleCall_16_0_1()); }
	RULE_ID{ after(grammarAccess.getStatemachineAccess().getInitialiStateStateIDTerminalRuleCall_16_0_1()); }
)
{ after(grammarAccess.getStatemachineAccess().getInitialiStateStateCrossReference_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__FromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromStateCrossReference_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getFromStateIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getFromStateIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getFromStateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEventCrossReference_2_0()); }
(
{ before(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getEventEventIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getEventEventCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ToAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToStateCrossReference_4_0()); }
(
{ before(grammarAccess.getTransitionAccess().getToStateIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getToStateIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getToStateCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


